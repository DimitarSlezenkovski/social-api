swagger: '2.0'
info:
  title: Social API
  version: "0.1"
  description: Social network API
consumes:
  - application/json
produces:
  - application/json
basePath: "/api"
paths:
  /comments/edit:
    put:
      tags: [ EditComment ]
      operationId: app.editComment
      summary: Editing comment
      parameters:
        - $ref: '#/parameters/commentBody'
      responses:
        200:
          description: OK
        404:
          description: Comment not found

  /cycledParties/edit:
    put:
      tags: [ EditCycleParty ]
      operationId: app.editCyclingParty
      summary: Editing Cycling party
      parameters:
        - $ref: '#/parameters/cyclePartyBody'
      responses:
        200:
          description: OK
        404:
          description: Cycled Party not found

  /comments/delete/{commentId}:
    delete:
      tags: [ DeleteComment ]
      operationId: app.deleteComment
      summary: Deleting comment
      parameters:
        - $ref: '#/parameters/commentId'
      responses:
        200:
          description: OK
        404:
          description: Comment not found

  /messages:
    get:
      tags: [ GetUserConversation ]
      operationId: app.getUserConversation
      summary: Getting all user conversations
      parameters:
        - $ref: '#/parameters/msgBody'
      responses:
        200:
          description: OK
        404:
          description: User Conversation not found

parameters:
  commentBody:
    name: commentBody
    description: This will post a comment to an existing post
    in: body
    schema:
      required:
        - postId
        - userId
        - text
      properties:
        postId:
          type: string
        userId:
          type: integer
        text:
          type: string

  cyclePartyBody:
    name: cyclePartyBody
    description: This is used to create a cycling party
    in: body
    schema:
      required:
        - routeId
        - partyCreatorId
      properties:
        routeId:
          type: string
        partyCreatorId:
          type: integer

  commentId:
    name: commentId
    description: Comment id
    in: path
    type: string
    required: true

  msgBody:
    name: msgBody
    description: The body of the message
    in: body
    schema:
      required:
        - fromUserId
        - toUserId
        - text
      properties:
        fromUserId:
          type: integer
        toUserId:
          type: integer
        text:
          type: string