swagger: '2.0'
info:
  title: Social API
  version: "0.1"
  description: Social network API
consumes:
  - application/json
produces:
  - application/json
basePath: "/api"
paths:
/comments/edit:
    put:
      tags: [ EditComment ]
      operationId: app.editComment
      summary: Editing comment
      parameters:
        - $ref: '#/parameters/postComment'
      responses:
        200:
          description: OK
        404:
          description: Internal server error

/cycledParties/edit:
    put:
      tags: [ EditCycleParty]
      operationId: app.editCycleParty
      summary: Editing Cycling party
      parameters:
        - $ref: '#/parameters/postCycleParty'
      responses:
        200:
          description: OK
        404:
          description: Internal server error


/comments/delete/{commentId}:
    delete:
      tags: [ DeleteComment ]
      operationId: app.deleteComment
      summary: Deleting comment
      parameters:
        - $ref: '#/parameters/CommentId'
      responses:
        200:
          description: OK
        404:
          description: Internal server error

parametars:
 commentBody:
    name : commentBody
    description : This will create a new comment
    in : body
    schema :
      required :
        - postId
        - userId
        - text
      properties :
        postId:
          type: integer
        userId :
          type : integer
        text :
          type : string

cyclePartyBody :
    name : cyclePartyBody
    description : This will create a cycling party
    in : body
    schema :
      required :
        - routeId
        - partyCreatorId
      properties :
        routeId :
          type : string
        partyCreatorId :
          type : integer


commentId:
    name: commentId
    description: Comment id
    in: path
    type: string
    required: true
#  /person/:
#    post:
#      tags: [ Person ]
#      operationId: app.person_add
#      parameters:
#        - $ref: '#/parameters/person_body'
#      responses:
#        200:
#          description: Return status
#        409:
#          description: Already exists
#  /person/{person_name}:
#    get:
#      tags: [ Person ]
#      operationId: app.person_find
#      parameters:
#        - $ref: '#/parameters/person_name'
#      responses:
#        200:
#          description: Return person object
#        404:
#          description: Person not found
#  person_body:
#    name: person_body
#    description: Test1 unique id
#    in: body
#    schema:
#      required:
#        - name
#      properties:
#        name:
#          type: string
#        surname:
#          type: string
#
#  person_name:
#    name: person_name
#    description: The name of the person we're looking for
#    in: path
#    required: true
#    type: string
